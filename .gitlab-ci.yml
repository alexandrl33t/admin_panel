stages:
    - docker-build
    - deploy

docker-build:
    image: docker:latest
    services:
        - docker:bind

    before_script:
        # логин в Gitlab Docker registry
       #- docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
        - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    tags:
        - admin-panel
    stage: docker-build
    script:
        # собственно сборка
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        # отправка собранного в registry
        - docker push "$CI_REGISTRY_IMAGE"

deploy:
    tags:
        - admin-panel
    stage: deploy
    # выкатываем только ветку master
    only:
        - test
    # для этой ступени другие команды инициализации
    before_script:     
        # добавляем приватный ключ для выката
        - eval $(ssh-agent -s)
        - echo "$DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir -p ~/.ssh
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        - docker stop admin_panel
    script:
        - echo 'Deploy'
        - docker build -t admin_panel .
        - docker run admin_panel
       
